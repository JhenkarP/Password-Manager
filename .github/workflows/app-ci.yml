name: App CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  POSTGRES_DB: password_manager
  POSTGRES_USER: pm_user
  POSTGRES_PASSWORD: pm_pass
  SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/password_manager"
  SPRING_DATASOURCE_USERNAME: pm_user
  SPRING_DATASOURCE_PASSWORD: pm_pass

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
      - name: Run Maven tests
        run: |
          cd Backend
          mvn -B -q test

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
      - name: Build JAR
        run: |
          cd Backend
          mvn -B -q package -DskipTests
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-jar
          path: Backend/target/*.jar

  docker-backend:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-backend
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        run: |
          cd Backend
          docker build -t ghcr.io/${{ github.repository_owner }}/password-manager-backend:${{ github.sha }} .
          docker tag ghcr.io/${{ github.repository_owner }}/password-manager-backend:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/password-manager-backend:latest
          docker push ghcr.io/${{ github.repository_owner }}/password-manager-backend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/password-manager-backend:latest
